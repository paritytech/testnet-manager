stages:
  - test
  - build
  - publish
  - deploy

default:
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - kubernetes-parity-build

variables:
  IMAGE_NAME:                      "paritytech/testnet-manager"
  DOCKERFILE:                      "Dockerfile"
  BUILDAH_IMAGE:                   "quay.io/buildah/stable:v1.29"
  BUILDAH_COMMAND:                 "buildah --storage-driver overlay2"

.test-refs:                        &test-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.publish-refs:                     &publish-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"                             # on commits to main branch
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1)

.release-refs:                     &release-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1)

.build-only-docker-image:          &build-only-docker-image
  image:                           $BUILDAH_IMAGE
  script:
    - $BUILDAH_COMMAND build
      --format=docker
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
      --tag "$IMAGE_NAME:latest"
      --file "$DOCKERFILE" .

.image_version:
  script:
    # version is either "main-<short_sha>" or tag
    - if [[ $CI_COMMIT_REF_NAME == "main" ]];
      then
        export VERSION=$CI_COMMIT_REF_NAME-${CI_COMMIT_SHORT_SHA};
      else
        export VERSION=$CI_COMMIT_REF_NAME;
      fi;
      echo "VERSION=$VERSION"

.deploy-with-argocd:                           &deploy-with-argocd
  stage: deploy
  image: argoproj/argocd:v2.6.7
  variables:
    ARGOCD_OPTS: --grpc-web --grpc-web-root-path /$DOMAIN
  script:
    - !reference [.image_version, script]
    - argocd app list
    - argocd app set  $APP --helm-set testnet-manager.image.tag=$VERSION
    - argocd app sync $APP --async
    #- argocd app wait $APP --timeout 300 --sync

build-docker-bot:
  stage:                           build
  <<:                              *test-refs
  <<:                              *build-only-docker-image

build-push-image:
  stage:                           publish
  <<:                              *publish-refs
  image:                           $BUILDAH_IMAGE
  variables:
    DOCKER_USER:                   $Docker_Hub_User_Parity
    DOCKER_PASS:                   $Docker_Hub_Pass_Parity
  script:
    - !reference [.image_version, script]
    - test "$DOCKER_USER" -a "$DOCKER_PASS" ||
        ( echo "no docker credentials provided"; exit 1 )
    - $BUILDAH_COMMAND build
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg IMAGE_NAME="${IMAGE_NAME}"
        --tag "$IMAGE_NAME:latest"
        --tag "$IMAGE_NAME:$VERSION"
        --file $DOCKERFILE .
    # The job will success only on the protected branch
    - echo "$DOCKER_PASS" |
        buildah login --username "$DOCKER_USER" --password-stdin docker.io
    - $BUILDAH_COMMAND info
    - $BUILDAH_COMMAND push --format=v2s2 "$IMAGE_NAME:latest"
    - $BUILDAH_COMMAND push --format=v2s2 "$IMAGE_NAME:$VERSION"
  after_script:
    - buildah logout --all


deploy-to-versi:
  <<:              *publish-refs
  extends: .deploy-with-argocd
  environment: parity-versi
  variables:
    DOMAIN: parity-versi
    APP: testnet-manager

deploy-to-wococo:
  <<:              *release-refs
  extends: .deploy-with-argocd
  environment: parity-testnet-wococo
  variables:
    DOMAIN: parity-testnet
    APP: testnet-manager-wococo

deploy-to-rococo:
  <<:              *release-refs
  extends: .deploy-with-argocd
  environment: parity-testnet-rococo
  variables:
    DOMAIN: parity-testnet
    APP: testnet-manager-rococo

deploy-to-westend:
  <<:              *release-refs
  extends: .deploy-with-argocd
  environment: parity-testnet-westend
  variables:
    DOMAIN: parity-testnet
    APP: testnet-manager-westend